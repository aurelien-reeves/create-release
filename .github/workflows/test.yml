name: Test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Creates a Release for a fast-forwarded release branch
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up git config
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
          git checkout --orphan develop
      - run: touch CHANGELOG.md
      - name: Create a simple CHANGELOG
        uses: cucumber-actions/changelog-action@v1.3
        with:
          args: init --output CHANGELOG.md --compare-url https://example.com/abcdef...HEAD
      - name: Commit the CHANGELOG
        run: |
          git commit -am "Add a changelog"
      - name: Create a release in the CHANGELOG
        uses: cucumber-actions/changelog-action@v1.3
        with:
          args: release --output CHANGELOG.md T.E.S.T
      - name: Commit the release
        run: |
          git commit -am "Release vT.E.S.T"
      - name: Create release branch
        run: |
          git checkout HEAD^
          git checkout -b release/test
          git merge --ff-only develop 
          # use `--force` just in case previous cleanup didn't run
          git push --force --set-upstream origin release/test
      - name: Attempt to create Release
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Assertions / cleanup
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Assert that the release was created
          expected_name="vT.E.S.T"
          release=$(gh release list | grep $expected_name | cut -f1)
          [ "$release" ] || (echo "No release created named $expected_name" && exit 1)

          # Assert that a tag for the release points to the head of `develop` branch
          git fetch --tags
          expected=$(git rev-parse develop)
          actual=$(git rev-parse vT.E.S.T)
          [ "$expected" = "$actual" ] || (echo "Commit $expected not tagged as expected" && exit 1)

          # Clean up
          gh release delete $release
          git push origin :refs/heads/develop
          git push origin :refs/heads/release/test
          git push origin :refs/tags/vT.E.S.T
